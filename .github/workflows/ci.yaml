---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
      - name: Install yamllint
        run: pip install --user yamllint
      - name: Run yamllint
        run: ~/.local/bin/yamllint -c .yamllint.yml --strict .
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.35
          args: --build-tags=interdomain
  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )
  cloudtest:
    runs-on: ubuntu-latest
    env:
      KUBERNETES_VERSION: ${{ secrets.NSM_KUBERNETES_VERSION }}
    steps:
      - name: Install azure-cli
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az version
      - name: Set up azure permissions
        run: |
          sudo chmod -R 777 ~/.azure
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
          github-token: ${{ github.token }}
      - name: setup env
        run: |
          echo GOPATH=$GITHUB_WORKSPACE >> $GITHUB_ENV
          echo GO111MODULE=on >> $GITHUB_ENV
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - name: Get cloudtest
        run: go get github.com/networkservicemesh/cloudtest@master
      - name: Get kind
        run: go get sigs.k8s.io/kind@v0.11.1
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Run interdomain testing
        run: |
          cloudtest
        env:
          AZURE_SERVICE_PRINCIPAL: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
          AZURE_SERVICE_PRINCIPAL_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SECRET }}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT }}
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Publish test report
        uses: mikepenz/action-junit-report@v2.1.0
        if: ${{ always() }}
        with:
          report_paths: "**/cloud_test/results/junit.xml"
          suite_regex: "Test*"
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs-${{ github.run_number }}
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/.tests/cloud_test/
